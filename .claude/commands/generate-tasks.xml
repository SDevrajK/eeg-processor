<?xml version="1.0" encoding="UTF-8"?>
<claude_command>
  <metadata>
    <n>generate_tasks</n>
    <version>2.1</version>
    <description>Generate detailed task list from PRD with two-phase approach - Research Enhanced</description>
    <target_environment>claude_code</target_environment>
  </metadata>

  <input>
    <parameter name="prd_file" type="file_reference" required="true">
      <description>Path to existing PRD markdown file</description>
      <validation>Must be .md file in tasks/ directory</validation>
    </parameter>
  </input>

  <execution>
    <phase name="analysis" order="1">
      <description>Analyze PRD and generate high-level tasks</description>
      <actions>
        <action>Read and parse the specified PRD file</action>
        <action>Extract functional requirements and user stories</action>
        <action>Identify 4-6 main implementation areas</action>
        <action>Generate parent tasks without sub-tasks</action>
        <action>Present to user for approval</action>
      </actions>
      <output_message>I have generated the high-level tasks based on the PRD. Proceeding to generate subtasks and final elaboration.</output_message>
    </phase>

    <phase name="elaboration" order="2">
      <description>Break down parent tasks into actionable sub-tasks</description>
      <wait_for> analysis phase completion </wait_for>
      <actions>
        <action>For each parent task, create 2-5 specific sub-tasks</action>
        <action>Ensure sub-tasks are actionable and complete the parent</action>
        <action>Identify files that need creation or modification</action>
        <action>Include corresponding test files</action>
        <action>Consider research-specific task types: data loading, exploratory analysis, statistical validation, visualization generation</action>
      </actions>
    </phase>
	
    <phase name="iteration" order="3">
      <description>Analyse the task list, and elaborate large subtasks</description>
      <wait_for> elaboration phase completion </wait_for>
      <actions>
        <action>Across all parent tasks, identify subtasks that need to be further elaborated</action>
        <action>Elaborate subtasks</action>
        <action>Generate final structured output</action>
      </actions>
    </phase>
  </execution>

  <o>
    <file>
      <path>docs/tasks/tasks-{prd-basename}.xml</path>
      <format>xml</format>
      <structure>
        <root_element>task_list</root_element>
        <metadata>
          <project_name>Research Project</project_name>
          <prd_source>{prd_file}</prd_source>
          <generated_date>{current_date}</generated_date>
          <estimated_duration>{total_estimated_days} days</estimated_duration>
        </metadata>
        <relevant_files>
          <description>List of files to be created/modified with brief descriptions</description>
          <include_tests>true</include_tests>
          <format>
            &lt;file action="create|modify" type="implementation|test|config|data|analysis"&gt;
              &lt;path&gt;relative/path/to/file&lt;/path&gt;
              &lt;description&gt;Brief description of file purpose&lt;/description&gt;
            &lt;/file&gt;
          </format>
        </relevant_files>
        <phases>
          <description>Implementation phases with tasks</description>
          <format>
            &lt;phase name="phase_name" order="1" estimated_days="1-2"&gt;
              &lt;description&gt;Phase description&lt;/description&gt;
              &lt;task id="1" priority="high|medium|low" estimated_hours="2-4"&gt;
                &lt;title&gt;Task title&lt;/title&gt;
                &lt;description&gt;Detailed task description&lt;/description&gt;
                &lt;acceptance_criteria&gt;
                  &lt;criterion&gt;Specific criterion&lt;/criterion&gt;
                &lt;/acceptance_criteria&gt;
                &lt;dependencies&gt;
                  &lt;task_id&gt;prerequisite_task_id&lt;/task_id&gt;
                &lt;/dependencies&gt;
              &lt;/task&gt;
            &lt;/phase&gt;
          </format>
        </phases>
        <completion_tracking>
          <description>Track task completion status and metadata</description>
          <format>
            &lt;task_completion&gt;
              &lt;task id="1"&gt;
                &lt;status&gt;pending|in_progress|completed|blocked&lt;/status&gt;
                &lt;completed_date&gt;YYYY-MM-DD HH:MM&lt;/completed_date&gt;
                &lt;completed_by&gt;user|claude&lt;/completed_by&gt;
                &lt;notes&gt;Any relevant completion notes or issues encountered&lt;/notes&gt;
              &lt;/task&gt;
            &lt;/task_completion&gt;
          </format>
          <initial_state>All tasks start with status="pending", other fields empty</initial_state>
        </completion_tracking>
        <notes>
          <description>Testing instructions, setup notes, and research-specific considerations</description>
        </notes>
      </structure>
    </file>
  </o>

  <behavior>
    <rule>Generate approximately 5 parent tasks</rule>
    <rule>Each parent should have 2-5 actionable sub-tasks</rule>
    <rule>Include test files alongside implementation files</rule>
    <rule>Target junior developer comprehension level</rule>
    <rule>Consider research-specific task types: data preprocessing, exploratory analysis, statistical validation, visualization generation, results export</rule>
    <rule>Include completion tracking section with all tasks initialized to "pending" status</rule>
    <rule>For data analysis projects, include tasks for data quality checks and reproducibility validation</rule>
  </behavior>

  <file_naming>
    <pattern>tasks-{prd-file-basename}.xml</pattern>
    <example>
      <input>docs/PRD-EEG-Signal-Filtering.md</input>
      <output>docs/tasks/tasks-PRD-EEG-Signal-Filtering.xml</output>
    </example>
  </file_naming>

  <usage_example>
    <command>generate_tasks --prd-file="docs/PRD-EEG-Signal-Filtering.md"</command>
    <expected_flow>
      1. Analyze PRD file
      2. Generate 5 high-level implementation phases (including data loading, filtering implementation, validation, testing, documentation)
      3. Automatically proceed to generate detailed subtasks
      4. Automatically elaborate large subtasks
      5. Generate final XML structure with completion tracking
      6. Save as docs/tasks/tasks-PRD-EEG-Signal-Filtering.xml
    </expected_flow>
  </usage_example>
</claude_command>