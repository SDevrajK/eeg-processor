<?xml version="1.0" encoding="UTF-8"?>
<claude_command>
  <metadata>
    <n>scaffold_project</n>
    <version>1.0</version>
    <description>Create a new research project with proper structure, templates, and best practices</description>
    <target_environment>claude_code</target_environment>
  </metadata>

  <input>
    <parameter name="directory" type="string" optional="true" default=".">
      <description>Directory path where the new project should be created (defaults to current directory)</description>
      <validation>Must be a valid directory path</validation>
    </parameter>
    <parameter name="project_name" type="string" optional="true">
      <description>Name of the research project (will prompt if not provided)</description>
    </parameter>
    <parameter name="author" type="string" optional="true">
      <description>Author name for project metadata (will prompt if not provided)</description>
    </parameter>
    <parameter name="description" type="string" optional="true">
      <description>Brief project description (will prompt if not provided)</description>
    </parameter>
  </input>

  <execution>
    <phase name="project_info_gathering" order="1">
      <description>Collect project metadata if not provided</description>
      <prompts>
        <prompt condition="project_name not provided">Project name:</prompt>
        <prompt condition="author not provided">Author name:</prompt>
        <prompt condition="description not provided">Brief project description:</prompt>
      </prompts>
    </phase>

    <phase name="directory_structure" order="2">
      <description>Create standard research project directory structure</description>
      <directories>
        <dir name="data">
          <subdir name="raw">Raw, unprocessed data files</subdir>
          <subdir name="processed">Cleaned and processed data</subdir>
          <subdir name="external">External datasets or references</subdir>
        </dir>
        <dir name="analysis">
          <subdir name="exploratory">Exploratory data analysis scripts</subdir>
          <subdir name="statistical">Statistical analysis and modeling</subdir>
          <subdir name="visualization">Figure and plot generation scripts</subdir>
          <subdir name="figures">Generated plots and figures</subdir>
        </dir>
        <dir name="lib">
          <description>Reusable functions and utility modules</description>
        </dir>
        <dir name="tests">
          <description>Unit tests and validation scripts</description>
        </dir>
        <dir name="docs">
          <description>Documentation and references</description>
        </dir>
        <dir name="results">
          <description>Analysis outputs and reports</description>
        </dir>
        <dir name="config">
          <description>Configuration files and parameters</description>
        </dir>
        <dir name="notebooks">
          <description>Jupyter notebooks for exploration</description>
        </dir>
      </directories>
    </phase>

    <phase name="template_files" order="3">
      <description>Create template files and configuration</description>
      <files>
        <file name="README.md">
          <template>research_project_readme</template>
          <description>Comprehensive project documentation</description>
        </file>
        <file name="requirements.txt">
          <template>research_requirements</template>
          <description>Python package dependencies</description>
        </file>
        <file name="environment.yml">
          <template>conda_environment</template>
          <description>Conda environment specification</description>
        </file>
        <file name=".gitignore">
          <template>research_gitignore</template>
          <description>Git ignore patterns for research projects</description>
        </file>
        <file name="config/config.yaml">
          <template>project_config</template>
          <description>Project configuration parameters</description>
        </file>
        <file name="lib/__init__.py">
          <template>package_init</template>
          <description>Python package initialization</description>
        </file>
        <file name="analysis/01_data_loading.py">
          <template>data_loading_script</template>
          <description>Example data loading script</description>
        </file>
        <file name="analysis/02_exploratory_analysis.py">
          <template>eda_script</template>
          <description>Example exploratory analysis script</description>
        </file>
        <file name="tests/test_data_loading.py">
          <template>test_template</template>
          <description>Example test file</description>
        </file>
        <file name="setup.py">
          <template>setup_py</template>
          <description>Package installation configuration</description>
        </file>
        <file name="notebooks/01_initial_exploration.ipynb">
          <template>jupyter_notebook</template>
          <description>Example Jupyter notebook</description>
        </file>
      </files>
    </phase>

    <phase name="environment_setup" order="4">
      <description>Initialize development environment</description>
      <actions>
        <action>Initialize git repository</action>
        <action>Create initial commit with project structure</action>
        <action>Generate environment setup instructions</action>
        <action>Create example data loading and analysis workflows</action>
      </actions>
    </phase>
  </execution>

  <templates>
    <template name="research_project_readme">
      <content>
        # {project_name}

        {description}

        ## Author
        {author}

        ## Project Structure
        ```
        {project_name}/
        ├── data/                   # Data files
        │   ├── raw/               # Raw, unprocessed data
        │   ├── processed/         # Cleaned and processed data
        │   └── external/          # External datasets
        ├── analysis/              # Analysis scripts and outputs
        │   ├── exploratory/       # Exploratory data analysis
        │   ├── statistical/       # Statistical analysis
        │   ├── visualization/     # Figure generation scripts
        │   └── figures/           # Generated plots and figures
        ├── lib/                   # Reusable utility modules
        ├── tests/                 # Test files
        ├── docs/                  # Documentation
        ├── results/               # Analysis outputs and reports
        ├── config/                # Configuration files
        └── notebooks/             # Jupyter notebooks
        ```

        ## Setup
        1. Create conda environment: `conda env create -f environment.yml`
        2. Activate environment: `conda activate {project_name}`
        3. Install package in development mode: `pip install -e .`

        ## Usage
        See example scripts in `analysis/` directory and notebooks in `notebooks/`.
        Generated figures will be saved in `analysis/figures/`.
        Reusable functions can be placed in `lib/` directory.

        ## Reproducibility
        - All random seeds are set in `config/config.yaml`
        - Environment specifications in `environment.yml`
        - Analysis parameters in `config/config.yaml`
      </content>
    </template>

    <template name="research_requirements">
      <content>
        # Core scientific computing
        numpy>=1.21.0
        pandas>=1.3.0
        scipy>=1.7.0
        matplotlib>=3.4.0
        seaborn>=0.11.0
        
        # Statistical analysis
        statsmodels>=0.12.0
        scikit-learn>=1.0.0
        
        # Data handling
        pyyaml>=5.4.0
        h5py>=3.1.0
        
        # Development and testing
        pytest>=6.0.0
        jupyter>=1.0.0
        black>=21.0.0
        flake8>=3.9.0
        
        # Optional: Add domain-specific packages as needed
        # For EEG/neuroscience: mne, nibabel
        # For imaging: scikit-image, opencv-python
        # For deep learning: torch, tensorflow
      </content>
    </template>

    <template name="conda_environment">
      <content>
        name: {project_name}
        channels:
          - conda-forge
          - defaults
        dependencies:
          - python=3.9
          - numpy
          - pandas
          - scipy
          - matplotlib
          - seaborn
          - statsmodels
          - scikit-learn
          - jupyter
          - pyyaml
          - h5py
          - pytest
          - black
          - flake8
          - pip
          - pip:
            - -e .
      </content>
    </template>

    <template name="research_gitignore">
      <content>
        # Data files (add specific patterns as needed)
        data/raw/*
        data/processed/*
        !data/raw/.gitkeep
        !data/processed/.gitkeep
        
        # Results and outputs
        results/*
        analysis/figures/*
        !results/.gitkeep
        !analysis/figures/.gitkeep
        
        # Python
        __pycache__/
        *.py[cod]
        *$py.class
        *.so
        .Python
        build/
        develop-eggs/
        dist/
        downloads/
        eggs/
        .eggs/
        lib/
        lib64/
        parts/
        sdist/
        var/
        wheels/
        *.egg-info/
        .installed.cfg
        *.egg
        
        # Jupyter
        .ipynb_checkpoints
        
        # Environment
        .env
        .venv
        env/
        venv/
        ENV/
        env.bak/
        venv.bak/
        
        # IDE
        .vscode/
        .idea/
        *.swp
        *.swo
        
        # OS
        .DS_Store
        Thumbs.db
      </content>
    </template>
  </templates>

  <o>
    <summary>Project structure and files created in specified directory</summary>
    <completion_message>
      Research project '{project_name}' has been successfully scaffolded in {directory}.
      
      Next steps:
      1. Navigate to the project directory
      2. Create conda environment: conda env create -f environment.yml
      3. Activate environment: conda activate {project_name}
      4. Install package: pip install -e .
      5. Start developing in analysis/ or notebooks/
      6. Put reusable functions in lib/ directory
    </completion_message>
  </o>

  <behavior>
    <rule>Create complete directory structure with .gitkeep files for empty directories</rule>
    <rule>Generate templates customized with provided project metadata</rule>
    <rule>Initialize git repository and create initial commit</rule>
    <rule>Provide clear setup instructions</rule>
    <rule>Include research-specific best practices in templates</rule>
    <rule>Create executable example scripts and notebooks</rule>
  </behavior>

  <usage_example>
    <command>scaffold_project /path/to/new/project --project_name="EEG Analysis" --author="Dr. Smith"</command>
    <expected_flow>
      1. Create directory structure in /path/to/new/project/
      2. Generate template files with project metadata
      3. Initialize git repository
      4. Provide setup instructions and next steps
    </expected_flow>
  </usage_example>
</claude_command>